{"id":"ts/vector.ts","dependencies":[{"name":"C:\\Users\\Anwar\\Desktop\\stage_opdr\\Snake\\tsconfig.json","includedInParent":true,"mtime":1586339395332},{"name":"C:\\Users\\Anwar\\Desktop\\stage_opdr\\Snake\\.babelrc","includedInParent":true,"mtime":1586259187841},{"name":"C:\\Users\\Anwar\\Desktop\\stage_opdr\\Snake\\package.json","includedInParent":true,"mtime":1611519396843}],"generated":{"js":"\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Vector2D = /*#__PURE__*/function () {\n  function Vector2D(x, y) {\n    _classCallCheck(this, Vector2D);\n\n    this.x = x;\n    this.y = y;\n  }\n\n  _createClass(Vector2D, [{\n    key: \"set\",\n    value: function set(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }, {\n    key: \"equals\",\n    value: function equals(v) {\n      return this.x == v.x && this.y == v.y;\n    }\n  }]);\n\n  return Vector2D;\n}();\n\nexports.Vector2D = Vector2D;"},"sourceMaps":{"js":{"mappings":[{"source":"ts/vector.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":13,"column":4}},{"source":"ts/vector.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":14,"column":0}},{"source":"ts/vector.ts","name":null,"original":{"line":6,"column":16},"generated":{"line":14,"column":20}},{"source":"ts/vector.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":14,"column":21}},{"source":"ts/vector.ts","name":null,"original":{"line":6,"column":27},"generated":{"line":14,"column":23}},{"source":"ts/vector.ts","name":null,"original":{"line":6,"column":4},"generated":{"line":14,"column":24}},{"source":"ts/vector.ts","name":null,"original":{"line":6,"column":36},"generated":{"line":14,"column":26}},{"source":"ts/vector.ts","name":null,"original":{"line":6,"column":36},"generated":{"line":15,"column":0}},{"source":"ts/vector.ts","name":null,"original":{"line":7,"column":8},"generated":{"line":17,"column":0}},{"source":"ts/vector.ts","name":null,"original":{"line":7,"column":13},"generated":{"line":17,"column":9}},{"source":"ts/vector.ts","name":null,"original":{"line":7,"column":8},"generated":{"line":17,"column":10}},{"source":"ts/vector.ts","name":null,"original":{"line":7,"column":17},"generated":{"line":17,"column":13}},{"source":"ts/vector.ts","name":null,"original":{"line":7,"column":8},"generated":{"line":17,"column":14}},{"source":"ts/vector.ts","name":null,"original":{"line":8,"column":8},"generated":{"line":18,"column":0}},{"source":"ts/vector.ts","name":null,"original":{"line":8,"column":13},"generated":{"line":18,"column":9}},{"source":"ts/vector.ts","name":null,"original":{"line":8,"column":8},"generated":{"line":18,"column":10}},{"source":"ts/vector.ts","name":null,"original":{"line":8,"column":17},"generated":{"line":18,"column":13}},{"source":"ts/vector.ts","name":null,"original":{"line":8,"column":8},"generated":{"line":18,"column":14}},{"source":"ts/vector.ts","name":null,"original":{"line":9,"column":5},"generated":{"line":19,"column":0}},{"source":"ts/vector.ts","name":null,"original":{"line":11,"column":8},"generated":{"line":23,"column":24}},{"source":"ts/vector.ts","name":null,"original":{"line":11,"column":19},"generated":{"line":23,"column":27}},{"source":"ts/vector.ts","name":null,"original":{"line":11,"column":28},"generated":{"line":23,"column":30}},{"source":"ts/vector.ts","name":null,"original":{"line":12,"column":8},"generated":{"line":24,"column":0}},{"source":"ts/vector.ts","name":null,"original":{"line":12,"column":13},"generated":{"line":24,"column":11}},{"source":"ts/vector.ts","name":null,"original":{"line":12,"column":8},"generated":{"line":24,"column":12}},{"source":"ts/vector.ts","name":null,"original":{"line":12,"column":17},"generated":{"line":24,"column":15}},{"source":"ts/vector.ts","name":null,"original":{"line":12,"column":8},"generated":{"line":24,"column":16}},{"source":"ts/vector.ts","name":null,"original":{"line":13,"column":8},"generated":{"line":25,"column":0}},{"source":"ts/vector.ts","name":null,"original":{"line":13,"column":13},"generated":{"line":25,"column":11}},{"source":"ts/vector.ts","name":null,"original":{"line":13,"column":8},"generated":{"line":25,"column":12}},{"source":"ts/vector.ts","name":null,"original":{"line":13,"column":17},"generated":{"line":25,"column":15}},{"source":"ts/vector.ts","name":null,"original":{"line":13,"column":8},"generated":{"line":25,"column":16}},{"source":"ts/vector.ts","name":null,"original":{"line":14,"column":5},"generated":{"line":26,"column":0}},{"source":"ts/vector.ts","name":null,"original":{"line":16,"column":11},"generated":{"line":29,"column":27}},{"source":"ts/vector.ts","name":null,"original":{"line":16,"column":22},"generated":{"line":29,"column":30}},{"source":"ts/vector.ts","name":null,"original":{"line":17,"column":8},"generated":{"line":30,"column":0}},{"source":"ts/vector.ts","name":null,"original":{"line":17,"column":15},"generated":{"line":30,"column":13}},{"source":"ts/vector.ts","name":null,"original":{"line":17,"column":20},"generated":{"line":30,"column":18}},{"source":"ts/vector.ts","name":null,"original":{"line":17,"column":15},"generated":{"line":30,"column":19}},{"source":"ts/vector.ts","name":null,"original":{"line":17,"column":25},"generated":{"line":30,"column":23}},{"source":"ts/vector.ts","name":null,"original":{"line":17,"column":26},"generated":{"line":30,"column":24}},{"source":"ts/vector.ts","name":null,"original":{"line":17,"column":27},"generated":{"line":30,"column":25}},{"source":"ts/vector.ts","name":null,"original":{"line":17,"column":15},"generated":{"line":30,"column":26}},{"source":"ts/vector.ts","name":null,"original":{"line":17,"column":32},"generated":{"line":30,"column":30}},{"source":"ts/vector.ts","name":null,"original":{"line":17,"column":37},"generated":{"line":30,"column":35}},{"source":"ts/vector.ts","name":null,"original":{"line":17,"column":32},"generated":{"line":30,"column":36}},{"source":"ts/vector.ts","name":null,"original":{"line":17,"column":42},"generated":{"line":30,"column":40}},{"source":"ts/vector.ts","name":null,"original":{"line":17,"column":43},"generated":{"line":30,"column":41}},{"source":"ts/vector.ts","name":null,"original":{"line":17,"column":44},"generated":{"line":30,"column":42}},{"source":"ts/vector.ts","name":null,"original":{"line":17,"column":8},"generated":{"line":30,"column":43}},{"source":"ts/vector.ts","name":null,"original":{"line":18,"column":5},"generated":{"line":31,"column":0}},{"source":"ts/vector.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":37,"column":0}},{"source":"ts/vector.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":37,"column":7}},{"source":"ts/vector.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":37,"column":8}},{"source":"ts/vector.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":37,"column":16}},{"source":"ts/vector.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":37,"column":19}},{"source":"ts/vector.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":37,"column":27}}],"sources":{"ts/vector.ts":"// Using vectors to make position calculations easier\r\nexport class Vector2D {\r\n    x: number;\r\n    y: number;\r\n\r\n    constructor(x: number, y: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    set(x: number, y: number): void {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n\r\n    equals(v: Vector2D): boolean {\r\n        return this.x == v.x && this.y == v.y;\r\n    }\r\n}"},"lineCount":null}},"error":null,"hash":"83e617b6ce200864c23cfa827029daf0","cacheData":{"env":{}}}