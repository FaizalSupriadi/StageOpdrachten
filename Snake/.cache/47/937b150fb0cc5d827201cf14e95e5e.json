{"id":"ts/factory.ts","dependencies":[{"name":"C:\\Users\\Anwar\\Desktop\\stage_opdr\\Snake\\tsconfig.json","includedInParent":true,"mtime":1586339395332},{"name":"C:\\Users\\Anwar\\Desktop\\stage_opdr\\Snake\\.babelrc","includedInParent":true,"mtime":1586259187841},{"name":"C:\\Users\\Anwar\\Desktop\\stage_opdr\\Snake\\package.json","includedInParent":true,"mtime":1611273705479}],"generated":{"js":"\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar Block = /*#__PURE__*/function () {\n  function Block() {\n    _classCallCheck(this, Block);\n  }\n\n  _createClass(Block, [{\n    key: \"print\",\n    value: function print() {}\n  }]);\n\n  return Block;\n}();\n\nvar Grass = /*#__PURE__*/function (_Block) {\n  _inherits(Grass, _Block);\n\n  var _super = _createSuper(Grass);\n\n  function Grass() {\n    _classCallCheck(this, Grass);\n\n    return _super.call(this);\n  }\n\n  _createClass(Grass, [{\n    key: \"print\",\n    value: function print() {\n      console.log(\"Grass\");\n    }\n  }]);\n\n  return Grass;\n}(Block);\n\nvar Dirt = /*#__PURE__*/function (_Block2) {\n  _inherits(Dirt, _Block2);\n\n  var _super2 = _createSuper(Dirt);\n\n  function Dirt() {\n    _classCallCheck(this, Dirt);\n\n    return _super2.call(this);\n  }\n\n  _createClass(Dirt, [{\n    key: \"print\",\n    value: function print() {\n      console.log(\"Dirt\");\n    }\n  }]);\n\n  return Dirt;\n}(Block);\n\nvar Water = /*#__PURE__*/function (_Block3) {\n  _inherits(Water, _Block3);\n\n  var _super3 = _createSuper(Water);\n\n  function Water() {\n    _classCallCheck(this, Water);\n\n    return _super3.call(this);\n  }\n\n  _createClass(Water, [{\n    key: \"print\",\n    value: function print() {\n      console.log(\"Water\");\n    }\n  }]);\n\n  return Water;\n}(Block);\n\nvar BlockFactory = /*#__PURE__*/function () {\n  function BlockFactory() {\n    _classCallCheck(this, BlockFactory);\n  }\n\n  _createClass(BlockFactory, [{\n    key: \"create\",\n    value: function create(blockType) {\n      switch (blockType) {\n        case \"grass\":\n          return new Grass();\n\n        case \"dirt\":\n          return new Dirt();\n\n        case \"water\":\n          return new Water();\n\n        default:\n          throw new Error('Unknown message block type: ' + blockType);\n      }\n    }\n  }]);\n\n  return BlockFactory;\n}();\n\nexports.BlockFactory = BlockFactory;\n\nfunction random_block() {\n  var list = [\"grass\", \"dirt\", \"water\"];\n  var index = Math.floor(Math.random() * Math.floor(list.length));\n  return list[index];\n}\n\nexports.random_block = random_block;"},"sourceMaps":{"js":{"mappings":[{"source":"ts/factory.ts","name":null,"original":{"line":2,"column":0},"generated":{"line":29,"column":4}},{"source":"ts/factory.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":30,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":30,"column":19}},{"source":"ts/factory.ts","name":null,"original":{"line":3,"column":4},"generated":{"line":31,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":3,"column":19},"generated":{"line":32,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":4,"column":16},"generated":{"line":36,"column":28}},{"source":"ts/factory.ts","name":null,"original":{"line":4,"column":26},"generated":{"line":36,"column":29}},{"source":"ts/factory.ts","name":null,"original":{"line":8,"column":0},"generated":{"line":42,"column":4}},{"source":"ts/factory.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":47,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":47,"column":19}},{"source":"ts/factory.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":48,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":9,"column":4},"generated":{"line":50,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":11,"column":5},"generated":{"line":51,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":12,"column":16},"generated":{"line":55,"column":28}},{"source":"ts/factory.ts","name":null,"original":{"line":12,"column":26},"generated":{"line":56,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":12,"column":26},"generated":{"line":56,"column":6}},{"source":"ts/factory.ts","name":null,"original":{"line":12,"column":33},"generated":{"line":56,"column":13}},{"source":"ts/factory.ts","name":null,"original":{"line":12,"column":34},"generated":{"line":56,"column":14}},{"source":"ts/factory.ts","name":null,"original":{"line":12,"column":26},"generated":{"line":56,"column":17}},{"source":"ts/factory.ts","name":null,"original":{"line":12,"column":38},"generated":{"line":56,"column":18}},{"source":"ts/factory.ts","name":null,"original":{"line":12,"column":26},"generated":{"line":56,"column":25}},{"source":"ts/factory.ts","name":null,"original":{"line":12,"column":49},"generated":{"line":57,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":8,"column":20},"generated":{"line":61,"column":2}},{"source":"ts/factory.ts","name":null,"original":{"line":17,"column":0},"generated":{"line":63,"column":4}},{"source":"ts/factory.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":68,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":68,"column":18}},{"source":"ts/factory.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":69,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":18,"column":4},"generated":{"line":71,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":20,"column":5},"generated":{"line":72,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":21,"column":16},"generated":{"line":76,"column":28}},{"source":"ts/factory.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":77,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":77,"column":6}},{"source":"ts/factory.ts","name":null,"original":{"line":21,"column":33},"generated":{"line":77,"column":13}},{"source":"ts/factory.ts","name":null,"original":{"line":21,"column":34},"generated":{"line":77,"column":14}},{"source":"ts/factory.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":77,"column":17}},{"source":"ts/factory.ts","name":null,"original":{"line":21,"column":38},"generated":{"line":77,"column":18}},{"source":"ts/factory.ts","name":null,"original":{"line":21,"column":26},"generated":{"line":77,"column":24}},{"source":"ts/factory.ts","name":null,"original":{"line":21,"column":48},"generated":{"line":78,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":17,"column":19},"generated":{"line":82,"column":2}},{"source":"ts/factory.ts","name":null,"original":{"line":26,"column":0},"generated":{"line":84,"column":4}},{"source":"ts/factory.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":89,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":89,"column":19}},{"source":"ts/factory.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":90,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":27,"column":4},"generated":{"line":92,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":29,"column":5},"generated":{"line":93,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":30,"column":16},"generated":{"line":97,"column":28}},{"source":"ts/factory.ts","name":null,"original":{"line":30,"column":26},"generated":{"line":98,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":30,"column":26},"generated":{"line":98,"column":6}},{"source":"ts/factory.ts","name":null,"original":{"line":30,"column":33},"generated":{"line":98,"column":13}},{"source":"ts/factory.ts","name":null,"original":{"line":30,"column":34},"generated":{"line":98,"column":14}},{"source":"ts/factory.ts","name":null,"original":{"line":30,"column":26},"generated":{"line":98,"column":17}},{"source":"ts/factory.ts","name":null,"original":{"line":30,"column":38},"generated":{"line":98,"column":18}},{"source":"ts/factory.ts","name":null,"original":{"line":30,"column":26},"generated":{"line":98,"column":25}},{"source":"ts/factory.ts","name":null,"original":{"line":30,"column":49},"generated":{"line":99,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":26,"column":20},"generated":{"line":103,"column":2}},{"source":"ts/factory.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":105,"column":4}},{"source":"ts/factory.ts","name":null,"original":{"line":36,"column":18},"generated":{"line":112,"column":27}},{"source":"ts/factory.ts","name":null,"original":{"line":36,"column":35},"generated":{"line":112,"column":38}},{"source":"ts/factory.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":113,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":37,"column":14},"generated":{"line":113,"column":14}},{"source":"ts/factory.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":113,"column":23}},{"source":"ts/factory.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":114,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":38,"column":13},"generated":{"line":114,"column":13}},{"source":"ts/factory.ts","name":null,"original":{"line":38,"column":8},"generated":{"line":114,"column":20}},{"source":"ts/factory.ts","name":null,"original":{"line":39,"column":12},"generated":{"line":115,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":39,"column":19},"generated":{"line":115,"column":17}},{"source":"ts/factory.ts","name":null,"original":{"line":39,"column":23},"generated":{"line":115,"column":21}},{"source":"ts/factory.ts","name":null,"original":{"line":39,"column":19},"generated":{"line":115,"column":26}},{"source":"ts/factory.ts","name":null,"original":{"line":39,"column":12},"generated":{"line":115,"column":28}},{"source":"ts/factory.ts","name":null,"original":{"line":41,"column":8},"generated":{"line":117,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":41,"column":13},"generated":{"line":117,"column":13}},{"source":"ts/factory.ts","name":null,"original":{"line":41,"column":8},"generated":{"line":117,"column":19}},{"source":"ts/factory.ts","name":null,"original":{"line":42,"column":12},"generated":{"line":118,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":42,"column":19},"generated":{"line":118,"column":17}},{"source":"ts/factory.ts","name":null,"original":{"line":42,"column":23},"generated":{"line":118,"column":21}},{"source":"ts/factory.ts","name":null,"original":{"line":42,"column":19},"generated":{"line":118,"column":25}},{"source":"ts/factory.ts","name":null,"original":{"line":42,"column":12},"generated":{"line":118,"column":27}},{"source":"ts/factory.ts","name":null,"original":{"line":44,"column":8},"generated":{"line":120,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":44,"column":13},"generated":{"line":120,"column":13}},{"source":"ts/factory.ts","name":null,"original":{"line":44,"column":8},"generated":{"line":120,"column":20}},{"source":"ts/factory.ts","name":null,"original":{"line":45,"column":12},"generated":{"line":121,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":45,"column":19},"generated":{"line":121,"column":17}},{"source":"ts/factory.ts","name":null,"original":{"line":45,"column":23},"generated":{"line":121,"column":21}},{"source":"ts/factory.ts","name":null,"original":{"line":45,"column":19},"generated":{"line":121,"column":26}},{"source":"ts/factory.ts","name":null,"original":{"line":45,"column":12},"generated":{"line":121,"column":28}},{"source":"ts/factory.ts","name":null,"original":{"line":47,"column":8},"generated":{"line":123,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":48,"column":12},"generated":{"line":124,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":48,"column":18},"generated":{"line":124,"column":16}},{"source":"ts/factory.ts","name":null,"original":{"line":48,"column":22},"generated":{"line":124,"column":20}},{"source":"ts/factory.ts","name":null,"original":{"line":48,"column":18},"generated":{"line":124,"column":25}},{"source":"ts/factory.ts","name":null,"original":{"line":48,"column":28},"generated":{"line":124,"column":26}},{"source":"ts/factory.ts","name":null,"original":{"line":48,"column":61},"generated":{"line":124,"column":59}},{"source":"ts/factory.ts","name":null,"original":{"line":48,"column":18},"generated":{"line":124,"column":68}},{"source":"ts/factory.ts","name":null,"original":{"line":48,"column":12},"generated":{"line":124,"column":69}},{"source":"ts/factory.ts","name":null,"original":{"line":37,"column":6},"generated":{"line":125,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":50,"column":5},"generated":{"line":126,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":132,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":132,"column":7}},{"source":"ts/factory.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":132,"column":8}},{"source":"ts/factory.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":132,"column":20}},{"source":"ts/factory.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":132,"column":23}},{"source":"ts/factory.ts","name":null,"original":{"line":35,"column":0},"generated":{"line":132,"column":35}},{"source":"ts/factory.ts","name":null,"original":{"line":54,"column":0},"generated":{"line":134,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":54,"column":0},"generated":{"line":134,"column":9}},{"source":"ts/factory.ts","name":null,"original":{"line":54,"column":0},"generated":{"line":134,"column":21}},{"source":"ts/factory.ts","name":null,"original":{"line":54,"column":0},"generated":{"line":134,"column":24}},{"source":"ts/factory.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":135,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":56,"column":8},"generated":{"line":135,"column":6}},{"source":"ts/factory.ts","name":null,"original":{"line":56,"column":12},"generated":{"line":135,"column":10}},{"source":"ts/factory.ts","name":null,"original":{"line":56,"column":15},"generated":{"line":135,"column":13}},{"source":"ts/factory.ts","name":null,"original":{"line":56,"column":16},"generated":{"line":135,"column":14}},{"source":"ts/factory.ts","name":null,"original":{"line":56,"column":15},"generated":{"line":135,"column":21}},{"source":"ts/factory.ts","name":null,"original":{"line":56,"column":25},"generated":{"line":135,"column":23}},{"source":"ts/factory.ts","name":null,"original":{"line":56,"column":15},"generated":{"line":135,"column":29}},{"source":"ts/factory.ts","name":null,"original":{"line":56,"column":33},"generated":{"line":135,"column":31}},{"source":"ts/factory.ts","name":null,"original":{"line":56,"column":15},"generated":{"line":135,"column":38}},{"source":"ts/factory.ts","name":null,"original":{"line":56,"column":4},"generated":{"line":135,"column":39}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":4},"generated":{"line":136,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":8},"generated":{"line":136,"column":6}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":13},"generated":{"line":136,"column":11}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":16},"generated":{"line":136,"column":14}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":20},"generated":{"line":136,"column":18}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":21},"generated":{"line":136,"column":19}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":16},"generated":{"line":136,"column":24}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":27},"generated":{"line":136,"column":25}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":31},"generated":{"line":136,"column":29}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":32},"generated":{"line":136,"column":30}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":27},"generated":{"line":136,"column":36}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":43},"generated":{"line":136,"column":41}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":47},"generated":{"line":136,"column":45}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":48},"generated":{"line":136,"column":46}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":43},"generated":{"line":136,"column":51}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":54},"generated":{"line":136,"column":52}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":58},"generated":{"line":136,"column":56}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":59},"generated":{"line":136,"column":57}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":43},"generated":{"line":136,"column":63}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":16},"generated":{"line":136,"column":64}},{"source":"ts/factory.ts","name":null,"original":{"line":57,"column":4},"generated":{"line":136,"column":65}},{"source":"ts/factory.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":137,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":58,"column":11},"generated":{"line":137,"column":9}},{"source":"ts/factory.ts","name":null,"original":{"line":58,"column":15},"generated":{"line":137,"column":13}},{"source":"ts/factory.ts","name":null,"original":{"line":58,"column":16},"generated":{"line":137,"column":14}},{"source":"ts/factory.ts","name":null,"original":{"line":58,"column":15},"generated":{"line":137,"column":19}},{"source":"ts/factory.ts","name":null,"original":{"line":58,"column":4},"generated":{"line":137,"column":20}},{"source":"ts/factory.ts","name":null,"original":{"line":59,"column":1},"generated":{"line":138,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":54,"column":0},"generated":{"line":140,"column":0}},{"source":"ts/factory.ts","name":null,"original":{"line":54,"column":0},"generated":{"line":140,"column":7}},{"source":"ts/factory.ts","name":null,"original":{"line":54,"column":0},"generated":{"line":140,"column":8}},{"source":"ts/factory.ts","name":null,"original":{"line":54,"column":0},"generated":{"line":140,"column":20}},{"source":"ts/factory.ts","name":null,"original":{"line":54,"column":0},"generated":{"line":140,"column":23}},{"source":"ts/factory.ts","name":null,"original":{"line":54,"column":0},"generated":{"line":140,"column":35}}],"sources":{"ts/factory.ts":"// Create superclass block with function print\r\nclass Block{\r\n    constructor(){}\r\n    public print(): void{};\r\n}\r\n\r\n// Extend from block.\r\nclass Grass extends Block{\r\n    constructor(){\r\n        super();\r\n    }\r\n    public print(): void{ console.log(\"Grass\"); };\r\n\r\n}\r\n\r\n// Extend from block.\r\nclass Dirt extends Block{\r\n    constructor(){\r\n        super();\r\n    }\r\n    public print(): void{ console.log(\"Dirt\"); };\r\n\r\n}\r\n\r\n// Extend from block.\r\nclass Water extends Block{\r\n    constructor(){\r\n        super();\r\n    }\r\n    public print(): void{ console.log(\"Water\"); };\r\n\r\n}\r\n\r\n// Blockfactory will create and return the blocktype that is called upon.\r\nexport class BlockFactory {\r\n    public create(blockType: string): Block {\r\n      switch (blockType) {\r\n        case \"grass\":\r\n            return new Grass();\r\n  \r\n        case \"dirt\":\r\n            return new Dirt();\r\n  \r\n        case \"water\":\r\n            return new Water();\r\n  \r\n        default:\r\n            throw new Error('Unknown message block type: ' + blockType);\r\n        }\r\n    }\r\n}\r\n\r\n// Randomly choose a block\r\nexport function random_block(): string{\r\n    \r\n    let list = [\"grass\", \"dirt\", \"water\"];\r\n    let index = Math.floor(Math.random() * Math.floor(list.length));\r\n    return list[index]\r\n}"},"lineCount":null}},"error":null,"hash":"d9e3fac0097a5101a9d6633e4d842f7a","cacheData":{"env":{}}}