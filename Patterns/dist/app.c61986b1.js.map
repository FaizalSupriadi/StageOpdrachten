{"version":3,"sources":["ts/factory.ts","ts/singleton.ts","ts/state.ts","ts/adapter.ts","ts/strategy.ts","ts/facade.ts","ts/builder.ts","ts/observer.ts","ts/pool.ts","app.ts","../node_modules/parcel-bundler/src/builtins/hmr-runtime.js"],"names":["OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","v","hmrAcceptRun","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","k","d","dep","Array","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":"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","file":"app.c61986b1.js","sourceRoot":"..\\src","sourcesContent":["// Create superclass block with function print\r\nclass Block{\r\n    constructor(){}\r\n    public print(): void{};\r\n}\r\n\r\n// Extend from block.\r\nclass Grass extends Block{\r\n    constructor(){\r\n        super();\r\n    }\r\n    public print(): void{ console.log(\"Grass\"); };\r\n\r\n}\r\n\r\n// Extend from block.\r\nclass Dirt extends Block{\r\n    constructor(){\r\n        super();\r\n    }\r\n    public print(): void{ console.log(\"Dirt\"); };\r\n\r\n}\r\n\r\n// Extend from block.\r\nclass Water extends Block{\r\n    constructor(){\r\n        super();\r\n    }\r\n    public print(): void{ console.log(\"Water\"); };\r\n\r\n}\r\n\r\n// Blockfactory will create and return the blocktype that is called upon.\r\nexport class BlockFactory {\r\n    public create(blockType: string): Block {\r\n      switch (blockType) {\r\n        case \"grass\":\r\n            return new Grass();\r\n  \r\n        case \"dirt\":\r\n            return new Dirt();\r\n  \r\n        case \"water\":\r\n            return new Water();\r\n  \r\n        default:\r\n            throw new Error('Unknown message block type: ' + blockType);\r\n        }\r\n    }\r\n}\r\n\r\n// Randomly choose a block\r\nexport function random_block(): string{\r\n    \r\n    let list = [\"grass\", \"dirt\", \"water\"];\r\n    let index = Math.floor(Math.random() * Math.floor(list.length));\r\n    return list[index]\r\n}","// Singleton class, this class contains an instance of itself.\r\n// Once this class is called upon it will check whether it already exists.\r\n// If it does not exist it will create an instance of itself and will only give this instance in subsequent calls.\r\n// The print functions is to check how many times the singleton is created.\r\n\r\nclass Singleton {\r\n    private static instance: Singleton;\r\n    \r\n    private constructor() {this.print();}\r\n\r\n    public static get_instance(): Singleton {\r\n        if (!this.instance) {\r\n            this.instance = new Singleton();\r\n        }\r\n        return this.instance;\r\n    }\r\n    public print() {\r\n        console.log(\"Singleton created!\" )\r\n    }\r\n}\r\n\r\n// This function will test the singleton by using the get_instance function twice and comparing eachother.\r\nexport function test_singleton() {\r\n    console.log(\"\\nTesting Singleton!\");\r\n    const s1 = Singleton.get_instance();\r\n    const s2 = Singleton.get_instance();\r\n\r\n    if (s1 == s2) {\r\n        console.log('Singleton works');\r\n\r\n    } else {\r\n        console.log('Singleton failed');\r\n\r\n    }\r\n}\r\n\r\n","// The statemachine class. this class contains an instance of state.\r\n// With this instance it can set it to different states ex: GameState, PauseState\r\n// This can then be used to call functions from the current state.\r\nexport class StateMachine {\r\n\r\n    private state: State;\r\n\r\n    constructor(state: State) {\r\n        this.set_state(state);\r\n    }\r\n\r\n    public set_state(state: State): void {\r\n        console.log(\"StateMachine: Transition to \" + state.constructor.name);\r\n        this.state = state;\r\n        this.state.set_machine(this);\r\n    }\r\n\r\n    public current_state(): string{\r\n        return this.state.constructor.name;\r\n    }\r\n\r\n    public request_display(): void {\r\n        this.state.display();\r\n    }\r\n\r\n    public request_event(): void {\r\n        this.state.event();\r\n    }\r\n}\r\n\r\n// Abstract class state, new implementations of states will inherit this.\r\nabstract class State {\r\n    protected stateMachine: StateMachine;\r\n\r\n    public set_machine(stateMachine: StateMachine) {\r\n        this.stateMachine = stateMachine;\r\n    }\r\n\r\n    public abstract display(): void;\r\n\r\n    public abstract event(): void;\r\n}\r\n\r\n// Pause state that has a display and event function\r\n// For test purposes they print out a text\r\nexport class GameState extends State {\r\n    public display(): void {\r\n        console.log('Display the game');\r\n        this.stateMachine.set_state(new PauseState());\r\n    }\r\n\r\n    public event(): void {\r\n        console.log('Handle events in game state');\r\n        this.stateMachine.set_state(new PauseState());\r\n\r\n    }\r\n}\r\n\r\n// Pause state that has a display and event function\r\n// For test purposes they print out a text\r\nexport class PauseState extends State {\r\n    public display(): void {\r\n        console.log('Display the pause menu');\r\n        this.stateMachine.set_state(new GameState());\r\n\r\n    }\r\n\r\n    public event(): void {\r\n        console.log('Handle events in pause state');\r\n        this.stateMachine.set_state(new GameState());\r\n    }\r\n}\r\n\r\n","// An interface with a function.\r\ninterface EnemyInterface{\r\n    attack() : string;\r\n}\r\n\r\n// A class that is not compatible with the EnemyInterface.\r\n// This instead has the function shoot().\r\nclass Archer{\r\n    public shoot(): string{\r\n       return \"Shooting!\";\r\n    }\r\n}\r\n\r\n// An adapter that makes the Archer class compatible with the EnemyInterface attack() function.\r\nclass EnemyAdapter implements EnemyInterface{\r\n    private archer: Archer;\r\n\r\n    constructor(){\r\n        this.archer = new Archer();\r\n    }\r\n\r\n    public attack(): string{\r\n        return this.archer.shoot();\r\n    }\r\n}\r\n\r\n// Testing the adapter by printing the attack.\r\nexport function test_adapter(){\r\n    console.log(\"\\nTesting Adapter!\");\r\n    let enemy : EnemyInterface  = new EnemyAdapter();\r\n    console.log(enemy.attack());\r\n\r\n}","// The context where the strategy will be used.\r\n// It can change the strategy and execute the algorithm.\r\nclass Context {\r\n\r\n    private strategy: Strategy;\r\n\r\n    constructor(strategy: Strategy) {\r\n        this.set_strategy(strategy);\r\n    }\r\n\r\n    public set_strategy(strategy: Strategy) {\r\n        this.strategy = strategy;\r\n    }\r\n\r\n    public execute_algorithm(): void {\r\n\r\n        console.log(\"Sorting array\");\r\n        const result = this.strategy.algorithm(['a', 'b', 'c', 'd', 'e']);\r\n        console.log(result.join(','));\r\n\r\n    }\r\n}\r\n// Interface for a strategy.\r\ninterface Strategy {\r\n    algorithm(data: string[]): string[];\r\n}\r\n\r\n// A normal sort strategy\r\nclass Sort implements Strategy {\r\n    public algorithm(data: string[]): string[] {\r\n        return data.sort();\r\n    }\r\n}\r\n// A reverse strategy\r\nclass Reverse implements Strategy {\r\n    public algorithm(data: string[]): string[] {\r\n        return data.reverse();\r\n    }\r\n}\r\n\r\n// Testing the strategy changing the strategy midway\r\nexport function test_strategy(){\r\n    console.log(\"\")\r\n    const context = new Context(new Sort());\r\n    console.log('Strategy: Normal sort');\r\n    context.execute_algorithm();\r\n    console.log('Strategy: Reverse sort');\r\n    context.set_strategy(new Reverse());\r\n    context.execute_algorithm();\r\n}","// Facade class, in this case it's a scoreboard.\r\n// This contains subsystems and will use their functions in one function.\r\nclass Scoreboard {\r\n    protected scoreInput: ScoreInput;\r\n\r\n    protected score: Score;\r\n\r\n    constructor(scoreInput: ScoreInput = null, score:Score = null ) {\r\n        this.scoreInput = scoreInput || new ScoreInput();\r\n        this.score = score || new Score();\r\n    }\r\n\r\n    public operation(): string {\r\n        let result = 'Scoreboard:\\n';\r\n        result += this.scoreInput.input_score();\r\n        result += this.score.get_score();\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\n// Example of a subsystem for a facade\r\n// A way to input a score, but in this case it will return a string\r\nclass ScoreInput  {\r\n    public input_score(): string {\r\n        return 'Input!\\n';\r\n    }\r\n}\r\n\r\n// Example of a subsystem for a facade\r\n// A way to get a score, but in this case it will return a string\r\nclass Score {\r\n    public get_score(): string {\r\n        return 'Score is ...\\n';\r\n    }\r\n}\r\n\r\n// Testing the facade by calling the operation() function.\r\nexport function test_facade() {\r\n    const scoreInput = new ScoreInput();\r\n    const score = new Score();\r\n    const scoreboard = new Scoreboard(scoreInput, score);\r\n    console.log(\"\\n\"+scoreboard.operation());\r\n\r\n}\r\n","// Builder interface\r\ninterface Builder {\r\n    produce_roof(): void;\r\n    produce_walls(): void;\r\n    produce_door(): void;\r\n}\r\n\r\n// Housebuilder class, this implements the builder interface.\r\n// This will produce parts of the house or reset it.\r\nclass HouseBuilder implements Builder {\r\n    private product: House ;\r\n\r\n    constructor() {\r\n        this.reset();\r\n    }\r\n\r\n    public reset(): void {\r\n        this.product = new House();\r\n    }\r\n\r\n    public produce_roof(): void {\r\n        this.product.parts.push(\"Roof\");\r\n    }\r\n\r\n    public produce_walls(): void {\r\n        this.product.parts.push(\"Walls\");\r\n    }\r\n\r\n    public produce_door(): void {\r\n        this.product.parts.push(\"Door\");\r\n    }\r\n\r\n    public get_product(): House {\r\n        const result = this.product;\r\n        this.reset();\r\n        return result;\r\n    }\r\n}\r\n\r\n// A house class, this is what is being made.\r\n// With the list_parts() function you can see what house parts are produced.\r\nclass House {\r\n    public parts: string[] = [];\r\n\r\n    public list_parts(): void {\r\n        console.log(\"Product parts: \" + this.parts.join(\", \") +\"\\n\");\r\n    }\r\n}\r\n\r\n// The director class, this class has functions to easily use the functions from the builder.\r\nclass Director {\r\n    private builder: Builder;\r\n\r\n    public set_builder(builder: Builder): void {\r\n        this.builder = builder;\r\n    }\r\n\r\n    public build_minimal(): void {\r\n        this.builder.produce_roof();\r\n    }\r\n\r\n    public build_full(): void {\r\n        this.builder.produce_roof();\r\n        this.builder.produce_walls();\r\n        this.builder.produce_door();\r\n    }\r\n}\r\n\r\n// Testing the builder pattern by testubg the director and the builder.\r\nexport function test_builder() {\r\n    const director = new Director();\r\n    const builder = new HouseBuilder();\r\n    director.set_builder(builder);\r\n\r\n    console.log(\"\\nCreate minimal house\");\r\n    director.build_minimal();\r\n    builder.get_product().list_parts();\r\n\r\n    console.log(\"Create full house\");\r\n    director.build_full();\r\n    builder.get_product().list_parts();\r\n\r\n    console.log(\"Create custom house\");\r\n    builder.produce_roof();\r\n    builder.produce_door();\r\n    builder.get_product().list_parts();\r\n}\r\n","// Interface for the subject\r\ninterface Subject {\r\n    attach(observer: Observer): void;\r\n    detach(observer: Observer): void;\r\n    notify(): void;\r\n}\r\n\r\n// Physics class that implements the subject.\r\n// This has functions to attach, detach and notify observers.\r\n// It also has a function to test notify().\r\nclass Physics implements Subject {\r\n\r\n    public state: number = 0;\r\n    private observers: Observer[] = [];\r\n\r\n    public attach(observer: Observer): void {\r\n        const isExist = this.observers.includes(observer);\r\n        if (isExist) {\r\n            return console.log(\"Subject: Observer has been attached already.\");\r\n        }\r\n\r\n        console.log(\"Subject: Attached an observer.\");\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    public detach(observer: Observer): void {\r\n        const observerIndex = this.observers.indexOf(observer);\r\n        if (observerIndex == -1) {\r\n            return console.log(\"Subject: Nonexistent observer.\");\r\n        }\r\n\r\n        this.observers.splice(observerIndex, 1);\r\n        console.log(\"Subject: Detached an observer.\");\r\n    }\r\n\r\n    public notify(): void {\r\n        console.log(\"Subject: Notifying observers...\");\r\n        for (const observer of this.observers) {\r\n            observer.update(this);\r\n        }\r\n    }\r\n    public jump(): void {\r\n        console.log(\"Jumping\");\r\n        this.state = 1;\r\n        this.notify();\r\n    }\r\n}\r\n\r\n// Interface for an observer\r\ninterface Observer {\r\n    // Receive update from subject.\r\n    update(subject: Subject): void;\r\n}\r\n\r\n// Achievement class, this implements the observer.\r\n// When this observer is notified it will check if the subject jumped and will print.\r\nclass Achievement implements Observer {\r\n    public update(subject: Subject): void {\r\n        if (subject instanceof Physics && subject.state == 1) {\r\n            console.log(\"Achievement Unlocked!\");\r\n        }\r\n    }\r\n}\r\n\r\n// Test the observer by attaching and detaching.\r\nexport function test_observer(){\r\n    console.log(\"\");\r\n    const subject = new Physics();\r\n\r\n    const observer = new Achievement();\r\n    subject.attach(observer);\r\n    \r\n    subject.jump();\r\n    \r\n    subject.detach(observer);\r\n    \r\n    subject.jump();\r\n}\r\n","// The object that will go into the pool\r\nclass Particle{\r\n    public lifetime: number = 3;\r\n    public is_used() { \r\n        return this.lifetime > 0; \r\n    }\r\n\r\n    public print(){\r\n        console.log(\"Particle\");\r\n    }\r\n}\r\n\r\n// The object pool that can hold 10 objects.\r\n// If the object doesn't exist yet, it makes one.\r\n// If the object has no lifetime, it removes it from the external array\r\nclass ParticlePool{\r\n    private poolSize: number = 10;\r\n    private particlePool: Particle[] = [];\r\n\r\n    public get_particle(): Particle {\r\n        for (let particle of this.particlePool) {\r\n            \r\n            if(!particle.is_used()){\r\n                return particle;\r\n            }\r\n            \r\n        }\r\n        if(this.particlePool.length < this.poolSize){\r\n                \r\n            let part = new Particle()\r\n            this.particlePool.push(part);\r\n            return part;\r\n        }\r\n        return;\r\n    }\r\n    public update(particles:Particle[]){\r\n        for (let particle of particles) {\r\n                \r\n            if(!particle.is_used()){\r\n                particle.lifetime = 3;\r\n                this.remove(particles,particle);\r\n            }else{\r\n                particle.print();\r\n                particle.lifetime -= 1;\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    public remove(particles:Particle[],particle:Particle){\r\n        const particleIndex = particles.indexOf(particle);\r\n        if (particleIndex != -1) {\r\n            particles.splice(particleIndex,1);\r\n        }\r\n    }\r\n}\r\n\r\n// Testing the object pool by updating more than the lifetime of the object\r\nexport function test_pool(){\r\n    console.log(\"\");\r\n    let particles: Particle[] = [];\r\n    let particlePool = new ParticlePool();\r\n    particles.push(particlePool.get_particle());\r\n    particlePool.update(particles);\r\n    particlePool.update(particles);\r\n    particlePool.update(particles);\r\n    particlePool.update(particles);\r\n    particlePool.update(particles);\r\n\r\n\r\n\r\n}","import { BlockFactory, random_block } from \"./ts/factory.ts\"\r\nimport { test_singleton } from \"./ts/singleton.ts\"\r\nimport { StateMachine, PauseState } from \"./ts/state.ts\"\r\nimport { test_adapter } from \"./ts/adapter.ts\"\r\nimport { test_strategy } from \"./ts/strategy.ts\"\r\nimport { test_facade } from \"./ts/facade.ts\"\r\nimport { test_builder } from \"./ts/builder.ts\"\r\nimport { test_observer } from \"./ts/observer.ts\"\r\nimport { test_pool } from \"./ts/pool.ts\"\r\n\r\nconst blockBtn = document.getElementById(\"blockBtn\")!;\r\nconst stateBtn1 = document.getElementById(\"stateBtn1\")!;\r\nconst stateBtn2 = document.getElementById(\"stateBtn2\")!;\r\n\r\nlet factory = new BlockFactory();\r\nconst machine = new StateMachine(new PauseState());\r\n\r\nblockBtn.addEventListener(\"click\", function(){\r\n    let block = factory.create(random_block());\r\n    block.print();\r\n});  \r\nstateBtn1.addEventListener(\"click\", function(){\r\n    console.log(\"\")\r\n    let currState = machine.current_state();\r\n    console.log(currState);\r\n    machine.request_display();\r\n\r\n});\r\nstateBtn2.addEventListener(\"click\", function(){\r\n    console.log(\"\")\r\n    let currState = machine.current_state();\r\n    console.log(currState);\r\n    machine.request_event();\r\n\r\n});\r\n\r\ntest_singleton();\r\ntest_adapter();\r\ntest_strategy();\r\ntest_facade();\r\ntest_builder();\r\ntest_observer();\r\ntest_pool();","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else if (location.reload) { // `location` global exists in a web worker context but lacks `.reload()` function.\n        location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}